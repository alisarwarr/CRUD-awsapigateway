{
 "Resources": {
  "myLambdaServiceRole5879F9B1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myLambda/ServiceRole/Resource"
   }
  },
  "myLambdaServiceRoleDefaultPolicy3782F84B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "myTableA48C5C70",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "myLambdaServiceRoleDefaultPolicy3782F84B",
    "Roles": [
     {
      "Ref": "myLambdaServiceRole5879F9B1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "myLambda696B54F1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "00d70e652ffcfb30418b728219953c893079dd0922bf4b18d1cbcf19a000a3eb.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "myLambdaServiceRole5879F9B1",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "myTableA48C5C70"
      },
      "PRIMARY_KEY": "id"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "myLambdaServiceRoleDefaultPolicy3782F84B",
    "myLambdaServiceRole5879F9B1"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myLambda/Resource",
    "aws:asset:path": "asset.00d70e652ffcfb30418b728219953c893079dd0922bf4b18d1cbcf19a000a3eb",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "myTableA48C5C70": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myTable/Resource"
   }
  },
  "myApi10332170": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "myApi"
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Resource"
   }
  },
  "myApiDeployment12138A1E84e5a693f9eb07256460b98953118bb2": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "myApi10332170"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "myApiidDELETEB0B60FB2",
    "myApiidGET75D80546",
    "myApiidOPTIONSCDAEA995",
    "myApiidPATCH08190394",
    "myApiid5E0E5101",
    "myApibooksGET3A50FC4B",
    "myApibooksOPTIONS006A0273",
    "myApibooksPOSTC0D213AF",
    "myApibooks7DC13D08"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Deployment/Resource"
   }
  },
  "myApiDeploymentStageprodBF46AA96": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "myApi10332170"
    },
    "DeploymentId": {
     "Ref": "myApiDeployment12138A1E84e5a693f9eb07256460b98953118bb2"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/DeploymentStage.prod/Resource"
   }
  },
  "myApibooks7DC13D08": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "myApi10332170",
      "RootResourceId"
     ]
    },
    "PathPart": "books",
    "RestApiId": {
     "Ref": "myApi10332170"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/books/Resource"
   }
  },
  "myApibooksGETApiPermissionAwsRestapiStackmyApi326B7D7BGETbooks27A07583": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "myLambda696B54F1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myApi10332170"
       },
       "/",
       {
        "Ref": "myApiDeploymentStageprodBF46AA96"
       },
       "/GET/books"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/books/GET/ApiPermission.AwsRestapiStackmyApi326B7D7B.GET..books"
   }
  },
  "myApibooksGETApiPermissionTestAwsRestapiStackmyApi326B7D7BGETbooks3F447002": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "myLambda696B54F1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myApi10332170"
       },
       "/test-invoke-stage/GET/books"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/books/GET/ApiPermission.Test.AwsRestapiStackmyApi326B7D7B.GET..books"
   }
  },
  "myApibooksGET3A50FC4B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "myApibooks7DC13D08"
    },
    "RestApiId": {
     "Ref": "myApi10332170"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "myLambda696B54F1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/books/GET/Resource"
   }
  },
  "myApibooksPOSTApiPermissionAwsRestapiStackmyApi326B7D7BPOSTbooksFC888209": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "myLambda696B54F1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myApi10332170"
       },
       "/",
       {
        "Ref": "myApiDeploymentStageprodBF46AA96"
       },
       "/POST/books"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/books/POST/ApiPermission.AwsRestapiStackmyApi326B7D7B.POST..books"
   }
  },
  "myApibooksPOSTApiPermissionTestAwsRestapiStackmyApi326B7D7BPOSTbooksE40FE960": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "myLambda696B54F1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myApi10332170"
       },
       "/test-invoke-stage/POST/books"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/books/POST/ApiPermission.Test.AwsRestapiStackmyApi326B7D7B.POST..books"
   }
  },
  "myApibooksPOSTC0D213AF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "myApibooks7DC13D08"
    },
    "RestApiId": {
     "Ref": "myApi10332170"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "myLambda696B54F1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/books/POST/Resource"
   }
  },
  "myApibooksOPTIONS006A0273": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "myApibooks7DC13D08"
    },
    "RestApiId": {
     "Ref": "myApi10332170"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Credentials": "'false'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/books/OPTIONS/Resource"
   }
  },
  "myApiid5E0E5101": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "myApi10332170",
      "RootResourceId"
     ]
    },
    "PathPart": "{id}",
    "RestApiId": {
     "Ref": "myApi10332170"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/Resource"
   }
  },
  "myApiidGETApiPermissionAwsRestapiStackmyApi326B7D7BGETidC7C33DC9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "myLambda696B54F1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myApi10332170"
       },
       "/",
       {
        "Ref": "myApiDeploymentStageprodBF46AA96"
       },
       "/GET/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/GET/ApiPermission.AwsRestapiStackmyApi326B7D7B.GET..{id}"
   }
  },
  "myApiidGETApiPermissionTestAwsRestapiStackmyApi326B7D7BGETidCA088B5C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "myLambda696B54F1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myApi10332170"
       },
       "/test-invoke-stage/GET/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/GET/ApiPermission.Test.AwsRestapiStackmyApi326B7D7B.GET..{id}"
   }
  },
  "myApiidGET75D80546": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "myApiid5E0E5101"
    },
    "RestApiId": {
     "Ref": "myApi10332170"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "myLambda696B54F1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/GET/Resource"
   }
  },
  "myApiidDELETEApiPermissionAwsRestapiStackmyApi326B7D7BDELETEidC63D8256": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "myLambda696B54F1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myApi10332170"
       },
       "/",
       {
        "Ref": "myApiDeploymentStageprodBF46AA96"
       },
       "/DELETE/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/DELETE/ApiPermission.AwsRestapiStackmyApi326B7D7B.DELETE..{id}"
   }
  },
  "myApiidDELETEApiPermissionTestAwsRestapiStackmyApi326B7D7BDELETEid1A897AEB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "myLambda696B54F1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myApi10332170"
       },
       "/test-invoke-stage/DELETE/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/DELETE/ApiPermission.Test.AwsRestapiStackmyApi326B7D7B.DELETE..{id}"
   }
  },
  "myApiidDELETEB0B60FB2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "myApiid5E0E5101"
    },
    "RestApiId": {
     "Ref": "myApi10332170"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "myLambda696B54F1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/DELETE/Resource"
   }
  },
  "myApiidPATCHApiPermissionAwsRestapiStackmyApi326B7D7BPATCHidC8D3E721": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "myLambda696B54F1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myApi10332170"
       },
       "/",
       {
        "Ref": "myApiDeploymentStageprodBF46AA96"
       },
       "/PATCH/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/PATCH/ApiPermission.AwsRestapiStackmyApi326B7D7B.PATCH..{id}"
   }
  },
  "myApiidPATCHApiPermissionTestAwsRestapiStackmyApi326B7D7BPATCHid58CA6935": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "myLambda696B54F1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "myApi10332170"
       },
       "/test-invoke-stage/PATCH/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/PATCH/ApiPermission.Test.AwsRestapiStackmyApi326B7D7B.PATCH..{id}"
   }
  },
  "myApiidPATCH08190394": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PATCH",
    "ResourceId": {
     "Ref": "myApiid5E0E5101"
    },
    "RestApiId": {
     "Ref": "myApi10332170"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "myLambda696B54F1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/PATCH/Resource"
   }
  },
  "myApiidOPTIONSCDAEA995": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "myApiid5E0E5101"
    },
    "RestApiId": {
     "Ref": "myApi10332170"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Credentials": "'false'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/myApi/Default/{id}/OPTIONS/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WQwU7DMAyGn2X3NFCG4LwNcUNMg/vkJqbz2iRV7TBVVd+dNB3SdvL3O/ZvO0/6ea3LFVy4MLYpWqr0+CVgGpVSx7EFV1nQ43v0Rih4tfvxt7zH3hFzUpMicHo8hBbnhxz3oSUz5LpMk+L1EZhRWG/mkLTeRtOgbIFR2cGDCzat8A3V4pNhUtBRDYIXGNIIZNl0lKdc8Q27NgwOvczZG5VOqbPPAqk+xN5gnvYvrkYLf6Ccgp1TC02TypvO/eTru6bPKF2Uu/bEu+AtSf4RHyzqMz/8li+6fNWPqzMTFX30Qg71YYl/tr57M4IBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "AwsRestapiStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "myApiEndpointF2DFDFB1": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "myApi10332170"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "myApiDeploymentStageprodBF46AA96"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}